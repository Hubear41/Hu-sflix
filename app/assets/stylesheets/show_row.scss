$duration: 450ms;
$growFactor: 1.5;

/* Mixins */

/* CSS3 calc() function to perform calculations */
@mixin calc($property, $expression) {
  #{$property}: -webkit-calc(#{$expression});
  #{$property}: -moz-calc(#{$expression});
  #{$property}: calc(#{$expression});
}

// CSS3 translateX with -ms version
@mixin translateX($expression) {
  -ms-transform: translateX(calc(#{$expression}));
  transform: translateX(calc(#{$expression}));
}

// calculates the width of thumbnails based on the current breakpoint
@mixin thumbnail-width($breakPoint, $padding: 4vw) {
  @include calc(
    width,
    "(100vw - (#{$padding} * 2)) / #{calcNumTiles($breakPoint)}"
  );
}

@mixin thumbnail-height($breakPoint, $padding: 4vw) {
  @include calc(
    height,
    "(100vw - (#{$padding} * 2)) / #{calcNumTiles($breakPoint)} / (16 / 9)"
  );
}

@mixin moveLeft($breakPoint, $padding: 4vw) {
  @include translateX(
    "(((100vw - (#{$padding} * 2)) / #{calcNumTiles($breakPoint)}) * (#{$growFactor} - 1)) / 2 * -1"
  );
}

@mixin moveRight($breakPoint, $padding: 4vw) {
  @include translateX(
    "((100vw - #{$padding} * 2) / #{calcNumTiles($breakPoint)}) * (#{$growFactor} - 1)"
  );
}

/* Helper Functions */

// calculates width based off of breakpoint widths
@function calcNumTiles($breakPoint) {
  $numOfTiles: 2;
  @if $breakPoint > 500px {
    $numOfTiles: (($breakPoint - 500px) / 300) + 2;
  }

  @return strip-unit($numOfTiles);
}

// Remove the unit of a length
// @param {Number} $number - Number to remove unit from
// @return {Number} - Unitless number
// From https://css-tricks.com/snippets/sass/strip-unit-function/
@function strip-unit($number) {
  @if type-of($number) == "number" and not unitless($number) {
    @return $number / ($number * 0 + 1);
  }

  @return $number;
}

.show-rows-wrapper {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  position: relative;
  overflow: visible;
  box-sizing: border-box;
  padding: 0 4%;
  width: 100%;

  h2 {
    font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen,
      Ubuntu, Cantarell, "Open Sans", "Helvetica Neue", sans-serif;
    text-transform: capitalize;
    font-weight: 500;
    font-size: 24px;
    letter-spacing: 1px;
  }

  .show-row {
    font-size: 0;
    transition: $duration transform;
    white-space: nowrap;
    padding: 0 4%;
    padding-bottom: 10px;
    width: fit-content;

    .show-thumbnail {
      position: relative;
      display: inline-block;
      transition: $duration all;
      transform-origin: center left;
      margin-right: 10px;
      font-size: 20px;
      cursor: pointer;
    }
  }
}

/* Media Queries */

@media only screen and (min-width: 500px) {
  .show-thumbnail {
    @include thumbnail-width(500px);
    @include thumbnail-height(500px);
  }

  .show-row:hover {
    @include moveLeft(500px);
  }

  .show-thumbnail:hover ~ .show-thumbnail {
    @include moveRight(500px);
  }
}

@media only screen and (min-width: 800px) {
  .show-thumbnail {
    @include thumbnail-width(800px);
    @include thumbnail-height(800px);
  }

  .show-row:hover {
    @include moveLeft(800px);
  }

  .show-thumbnail:hover ~ .show-thumbnail {
    @include moveRight(800px);
  }
}

@media only screen and (min-width: 1100px) {
  .show-thumbnail {
    @include thumbnail-width(1100px);
    @include thumbnail-height(1100px);
  }

  .show-row:hover {
    @include moveLeft(1100px);
  }

  .show-thumbnail:hover ~ .show-thumbnail {
    @include moveRight(1100px);
  }
}

@media only screen and (max-width: 1400px) {
  .show-rows {
    padding: 0 60px;
  }

  .show-thumbnail {
    @include thumbnail-width(1400px, 60px);
    @include thumbnail-height(1400px, 60px);
  }

  .show-row:hover {
    @include moveLeft(1400px, 60px);
  }

  .show-thumbnail:hover ~ .show-thumbnail {
    @include moveRight(1400px, 60px);
  }
}

/* row and thumbnail animation */

.show-row:hover .show-thumbnail:hover {
  transform: scale($growFactor);
}
