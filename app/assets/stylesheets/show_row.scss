$duration: 450ms;
$tileWidth: 300px;
$tileHeight: ($tileWidth / (16/9));
$growFactor: 1.5;

$moveLeft: -($tileWidth * ($growFactor - 1) / 2);
$moveRight: ($tileWidth * ($growFactor - 1));

.show-rows-wrapper {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  position: relative;
  overflow: visible;
  box-sizing: border-box;
  padding: 0 4%;
  width: 100%;

  h2 {
    font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen,
      Ubuntu, Cantarell, "Open Sans", "Helvetica Neue", sans-serif;
    text-transform: capitalize;
    font-weight: 500;
    font-size: 24px;
    letter-spacing: 1px;
  }

  .show-row {
    font-size: 0;
    transition: $duration transform;
    white-space: nowrap;
    margin: ($tileHeight / 8) 0;
    padding-bottom: 10px;
    width: fit-content;

    .show-thumbnail {
      position: relative;
      display: inline-block;
      width: $tileWidth;
      height: $tileHeight;
      transition: $duration all;
      transform-origin: center left;
      margin-right: 10px;
      font-size: 20px;
      cursor: pointer;
    }
  }
}

/* row and thumbnail animation */

.show-row:hover {
  transform: translate3d($moveLeft, 0, 0);
}

.show-row:hover .show-thumbnail:hover {
  transform: scale($growFactor);
}

.show-thumbnail:hover ~ .show-thumbnail {
  transform: translate3d($moveRight, 0, 0);
}

/* Mixins */

@mixin thumbnail-width($breakPoint, $margins: 4%) {
  width: calc(100% - $margins * 2) / calcNumTiles($breakPoint);
}

@mixin thumbnail-height($breakPoint, $margins: 4%) {
  height: calc((100% - $magins * 2) / calcNumTiles($breakPoint) / (16 / 9));
}

@mixin moveLeft($breakPoint, $margins: 0.04) {
  transform: translate3d(
    calc(
      (100% - $margins * 2) / calcNumTiles($breakPoint) * - ($growFactor - 1) /
        2
    ),
    0,
    0
  );
}

@mixin calcMoveRight($breakPoint, $margins: 0.04) {
  transform: calc(
    (100% - $margins * 2) / calcNumTiles($breakPoint) * ($growFactor - 1),
    0,
    0
  );
}

/* Helper Functions */

// calculates width based off of breakpoint widths
@function calcNumTiles($breakPoint) {
  $numOfTiles: 2;
  @if $breakPoint > 500px {
    $numOfTiles: (($breakPoint - 500px) / 300) + 2;
  }

  @return $numOfTiles;
}
